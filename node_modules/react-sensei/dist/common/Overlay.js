function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import styled, { css } from "styled-components";
import { rgba } from "polished";
const visible = css`
  visibility: visible;
  opacity: 1;
`;
const StyledWrapper = styled.div`
  position: ${p => p.position || "fixed"};
  z-index: ${p => p.zIndex || 2};
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  visibility: hidden;
  opacity: 0;
  background: ${rgba("black", 0.5)};
  transition-property: visibility, opacity;
  transition-duration: 0.5s;

  ${p => p.isVisible && visible};
`;

const Wrapper = ({
  isVisible,
  position,
  zIndex,
  ...rest
}) => {
  return /*#__PURE__*/React.createElement(StyledWrapper, _extends({
    isVisible: isVisible,
    position: position,
    zIndex: zIndex
  }, rest));
};

export default Wrapper;
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import styled from "styled-components";
const StyledWrapper = styled.div`
  display: flex;
  align-items: ${p => p.alignItems};
  justify-content: center;
  flex-direction: column;
  margin-bottom: ${p => !p.hideBottomMargin ? p.theme.lenMd1 : 0};
`;
const StyledValue = styled.div`
  margin-bottom: ${p => p.isValueFirst ? p.theme.lenSm1 : 0};
  color: ${p => p.theme.colorText};
  font-size: ${p => p.theme.lenMd2};

  @media (min-width: ${p => p.theme.screenWidthXs}) {
    font-size: ${p => p.theme.lenMd3};
  }

  @media (min-width: ${p => p.theme.screenWidthSm}) {
    font-size: ${p => p.theme.lenLg1};
  }
`;
const StyledLabel = styled.div`
  color: ${p => p.theme.colorLabel};
  font-size: ${p => p.theme.lenMd1};
  margin-bottom: ${p => !p.isValueFirst ? p.theme.lenSm1 : 0};
`;

const Wrapper = ({
  label,
  value,
  hideBottomMargin,
  isValueFirst,
  alignItems = "center",
  ...rest
}) => {
  return /*#__PURE__*/React.createElement(StyledWrapper, _extends({
    hideBottomMargin: hideBottomMargin,
    alignItems: alignItems
  }, rest), isValueFirst ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledValue, {
    isValueFirst: isValueFirst
  }, value), /*#__PURE__*/React.createElement(StyledLabel, {
    isValueFirst: isValueFirst
  }, label)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledLabel, {
    isValueFirst: isValueFirst
  }, label), /*#__PURE__*/React.createElement(StyledValue, {
    isValueFirst: isValueFirst
  }, value)));
};

export default Wrapper;
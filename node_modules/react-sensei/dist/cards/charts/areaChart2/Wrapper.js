import React, { useState, useEffect } from "react";
import styled from "styled-components";
import { useStyledTheme } from "../../../hooks";
import Chart from "./WrapperChart";
import { Card } from "../../../";
const StyledCard = styled(Card)`
  padding: ${p => p.theme.lenLg3} ${p => p.theme.lenLg2}
    ${p => p.theme.lenMd1};
`;
const StyledHeader = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
`;
const StyledTitleStack = styled.div`
  margin-bottom: ${p => p.theme.lenMd1};
`;
const StyledTitle = styled.div`
  margin-bottom: ${p => p.theme.lenSm2};
  color: ${p => p.theme.colorLabel};
`;
const StyledValue = styled.div`
  font-size: ${p => p.theme.lenLg1};
  color: ${p => p.theme.colorText};
`;
const StyledAddButton = styled.button`
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: ${p => p.theme.lenMd2};
  color: ${p => p.isAccent ? p.theme.colorAccent : p.theme.colorPrimary};
`;
const StyledAddButtonText = styled.span`
  color: inherit;
`;
const StyledAddButtonIcon = styled.span`
  color: inherit;
`;

const Wrapper = ({
  id,
  cardTitle,
  cardValue,
  statList,
  data,
  dataHigh,
  isAccent,
  markerIndex,
  chartWrapperHeightMobile,
  chartWrapperHeightDesktop,
  chartHeightMobile,
  chartHeightDesktop
}) => {
  const theme = useStyledTheme();
  const [prevThemeId, setPrevThemeId] = useState(undefined);
  const [themeLoaded, setThemeLoaded] = useState(false);
  useEffect(() => {
    console.log("themeChanged", themeLoaded);
    setThemeLoaded(false);

    if (theme.id !== prevThemeId) {
      setTimeout(() => {
        setThemeLoaded(true);
      }, 10);
    }
  }, [theme.id]);
  return /*#__PURE__*/React.createElement(StyledCard, null, /*#__PURE__*/React.createElement(StyledHeader, null, /*#__PURE__*/React.createElement(StyledTitleStack, null, /*#__PURE__*/React.createElement(StyledTitle, null, cardTitle), /*#__PURE__*/React.createElement(StyledValue, null, cardValue)), /*#__PURE__*/React.createElement(StyledAddButton, {
    isAccent: isAccent
  }, /*#__PURE__*/React.createElement(StyledAddButtonText, null, "Add New"), /*#__PURE__*/React.createElement(StyledAddButtonIcon, {
    className: "material-icons"
  }, "keyboard_arrow_right"))), themeLoaded ? /*#__PURE__*/React.createElement(Chart, {
    chartWrapperHeightMobile: chartWrapperHeightMobile,
    chartWrapperHeightDesktop: chartWrapperHeightDesktop,
    chartHeightMobile: chartHeightMobile,
    chartHeightDesktop: chartHeightDesktop,
    id: id,
    markerIndex: markerIndex,
    isAccent: isAccent,
    data: data,
    dataHigh: dataHigh
  }) : null);
};

export default Wrapper;
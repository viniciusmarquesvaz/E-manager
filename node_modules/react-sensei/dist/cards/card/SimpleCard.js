function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import styled, { css } from "styled-components";
const primary = css`
  background: ${p => p.theme.colorPrimary};
  color: ${p => p.theme.colorPrimaryText};
`;
const accent = css`
  background: ${p => p.theme.colorAccent};
  color: ${p => p.theme.colorAccentText};
`;
const Card = styled.div`
  padding: ${p => p.hasTitle ? 0 : p.theme.lenMd3};
  margin-bottom: ${p => !p.noBottomMargin && p.theme.lenMd1};
  border-radius: ${p => p.theme.borderRadius};
  background: ${p => p.theme.colorCardBackground};
  color: ${p => p.theme.colorText};

  ${p => p.isPrimary && primary};
  ${p => p.isAccent && accent};
`;
const CardContent = styled.div`
  padding: 0 ${p => p.theme.lenMd3} ${p => p.theme.lenMd3};
`;
const CardTitle = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: ${p => p.theme.lenXl2};
  padding: 0 ${p => p.theme.lenMd1};
  color: ${p => p.theme.colorLabel};
  font-size: ${p => p.theme.lenMd2};
`;
export default (({
  children,
  cardTitle,
  isPrimary,
  isAccent,
  noBottomMargin,
  ...rest
}) => {
  return /*#__PURE__*/React.createElement(Card, _extends({
    hasTitle: cardTitle,
    isPrimary: isPrimary,
    isAccent: isAccent,
    noBottomMargin: noBottomMargin
  }, rest), cardTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardTitle, null, cardTitle), /*#__PURE__*/React.createElement(CardContent, null, children)), !cardTitle && children);
});